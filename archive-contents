(1
 (ac-js2 . [(20190101 933) ((js2-mode (20090723)) (skewer-mode (1 4))) "Automode, with navigation." tar])
 (ag . [(0 48) ((dash (2 8 0)) (s (1 9 0)) (cl-lib (0 5))) "A front-end for ag ('the silver searcher'), the C ack replacement." tar])
 (ansible . [(0 3 2) ((s (1 9 0)) (f (0 16 2))) "Ansible minor mode." tar])
 (ansible-doc . [(0 4) ((emacs (24 3))) "Ansible documentation Minor Mode." tar])
 (async . [(1 9 9) ((emacs (24 4))) "Asynchronous processing in Emacs" tar])
 (auctex . [(14 0 7) ((emacs (27 1))) "Integrated environment for *TeX*" tar])
 (auctex-latexmk . [(1 0 2 1) ((auctex (11 87))) "Add LatexMk support to AUCTeX." tar])
 (bind-key . [(2 4 1) nil "A simple way to manage personal keybindings" tar])
 (ccls . [(20240331 2132) ((emacs (27 1)) (lsp-mode (6 3 1)) (dash (2 14 1))) "Ccls client for lsp-mode." tar])
 (cider . [(1 16 0) ((emacs (26)) (clojure-mode (5 19)) (parseedn (1 2 1)) (queue (0 2)) (spinner (1 7)) (seq (2 22)) (sesman (0 3 2)) (transient (0 4 1))) "Clojure Interactive Development Environment that Rocks." tar])
 (clang-format . [(20241019 2151) ((cl-lib (0 3))) "Format code using clang-format." tar])
 (clj-refactor . [(3 12 0) ((emacs (26 1)) (seq (2 19)) (yasnippet (0 6 1)) (paredit (24)) (multiple-cursors (1 2 2)) (clojure-mode (5 18 0)) (cider (1 11 1)) (parseedn (1 2 0)) (inflections (2 6)) (hydra (0 13 2))) "A collection of commands for refactoring Clojure code." tar])
 (clojure-mode . [(5 19 0) ((emacs (25 1))) "Major mode for Clojure code." tar])
 (cmake-font-lock . [(0 1 13) ((cmake-mode (0 0))) "Advanced, type aware, highlight support for CMake." tar])
 (cmake-mode . [(3 31 0) ((emacs (24 1))) "Major-mode for editing CMake sources." tar])
 (color-identifiers-mode . [(1 0 0) ((dash (2 5 0)) (emacs (24))) "Color identifiers based on their names." tar])
 (color-theme-sanityinc-tomorrow . [(1 17) nil "A version of Chris Kempson's various Tomorrow themes." tar])
 (column-enforce-mode . [(20200605 1933) nil "Highlight text that extends beyond a  column." tar])
 (company . [(1 0 2) ((emacs (25 1))) "Modular text completion framework" tar])
 (company-quickhelp . [(20231026 1714) ((emacs (24 3)) (company (0 8 9)) (pos-tip (0 4 6))) "Popup documentation for completion candidates." tar])
 (company-reftex . [(20210418 1316) ((emacs (25 1)) (s (1 12)) (company (0 8))) "Company backend based on RefTeX." tar])
 (compat . [(30 0 0 0) ((emacs (24 4)) (seq (2 23))) "Emacs Lisp Compatibility Library" tar])
 (csv-mode . [(1 27) ((emacs (27 1)) (cl-lib (0 5))) "Major mode for editing comma/char separated values" tar])
 (dash . [(2 19 1) ((emacs (24))) "A modern list library for Emacs" tar])
 (debpaste . [(0 1 5) ((xml-rpc (1 6 7))) "Interface for getting/posting/deleting pastes from paste.debian.net." tar])
 (diminish . [(0 46) ((emacs (24 3))) "Diminished modes are minor modes with no modeline display" tar])
 (discover-my-major . [(1 0) ((makey (0 2))) "Discover key bindings and their meaning for the current Emacs major mode." tar])
 (editorconfig . [(0 11 0) ((emacs (26 1)) (nadvice (0 3))) "EditorConfig Emacs Plugin." tar])
 (elisp-slime-nav . [(0 10) ((emacs (24 1)) (cl-lib (0 2))) "Make M, work in elisp like they do in slime." tar])
 (elpa-mirror . [(20210214 42) ((emacs (25 1))) "Create local package repository from installed packages" tar])
 (elpy . [(1 35 0) ((company (0 9 2)) (emacs (24 4)) (highlight-indentation (0 5 0)) (pyvenv (1 3)) (yasnippet (0 8 0)) (s (1 11 0))) "Emacs Python Development Environment." tar])
 (emmet-mode . [(1 0 8) nil "Unofficial Emmet's support for emacs." tar])
 (emr . [(0 4) ((s (1 3 1)) (dash (1 2 0)) (cl-lib (0 2)) (popup (0 5 0)) (emacs (24 1)) (list-utils (0 3 0)) (paredit (24 0 0)) (projectile (0 9 1)) (clang-format (0)) (iedit (0 97))) "Emacs refactoring system." tar])
 (epl . [(0 9) ((cl-lib (0 3))) "Emacs Package Library." tar])
 (ess . [(24 1 1) ((emacs (25 1))) "Emacs Speaks Statistics" tar])
 (evil . [(1 14 2) ((emacs (24 1)) (goto-chg (1 6)) (cl-lib (0 5))) "Extensible Vi layer for Emacs." tar])
 (evil-exchange . [(20200118 252) ((evil (1 2 8)) (cl-lib (0 3))) "Exchange text more easily within Evil." tar])
 (evil-nerd-commenter . [(3 6 1) ((emacs (26 1))) "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim." tar])
 (evil-numbers . [(0 6) ((emacs (24 1))) "Increment/decrement numbers like in VIM." tar])
 (evil-visualstar . [(0 2 0) ((evil (0))) "Starts a * or # search from the visual selection." tar])
 (f . [(0 21 0) ((emacs (24 1)) (s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories." tar])
 (flx . [(0 6 1) ((cl-lib (0 3))) "Fuzzy matching with good sorting." tar])
 (flx-ido . [(0 6 1) ((flx (0 1)) (cl-lib (0 3))) "Flx integration for ido." tar])
 (flycheck . [(34 1) ((emacs (26 1))) "Onfly syntax checking." tar])
 (flycheck-haskell . [(0 8) ((emacs (24 3)) (flycheck (0 25)) (haskell-mode (13 7)) (dash (2 4 0)) (seq (1 11)) (let-alist (1 0 1))) "Flycheck: Automatic Haskell configuration." tar])
 (flycheck-pos-tip . [(0 3) ((emacs (24 1)) (flycheck (0 22)) (pos-tip (0 4 6))) "Display Flycheck errors in GUI tooltips." tar])
 (gh . [(1 0 1) ((emacs (25 1)) (pcache (0 4 2)) (logito (0 1)) (marshal (0 9 0))) "A GitHub library for Emacs." tar])
 (gist . [(1 4 0) ((emacs (24 1)) (gh (0 10 0))) "Emacs integration for gist.github.com." tar])
 (goto-chg . [(1 7 5) ((emacs (24 1))) "Go to last change." tar])
 (haskell-mode . [(17 5) ((emacs (25 1))) "A Haskell editing mode." tar])
 (haskell-snippets . [(0 1 0) ((yasnippet (0 8 0))) "Yasnippets for Haskell." tar])
 (helm . [(4 0) ((helm-core (4 0)) (wfnames (1 2))) "Helm is an Emacs incremental and narrowing framework." tar])
 (helm-core . [(4 0) ((emacs (25 1)) (async (1 9 8))) "Development files for Helm." tar])
 (highlight-defined . [(0 1 6) ((emacs (24))) "Syntax highlighting of known Elisp symbols." tar])
 (highlight-indentation . [(0 7 0) nil "Minor modes for highlighting indentation." tar])
 (ht . [(2 3) ((dash (2 12 0))) "The missing hash table library for Emacs." tar])
 (htmlize . [(1 58) ((emacs (25 1))) "Convert buffer text and decorations to HTML." tar])
 (hungry-delete . [(1 1 5) nil "Hungry delete minor mode." tar])
 (hydra . [(0 15 0) ((cl-lib (0 5)) (lv (0))) "Make bindings that stick around." tar])
 (ido-completing-read+ . [(4 14) ((emacs (24 4)) (seq (0 5)) (memoize (1 1))) "A completingfunction using ido." tar])
 (ido-sort-mtime . [(20171121 859) nil "Sort Ido's file list by modification time." tar])
 (ido-vertical-mode . [(0 1 6) nil "Makes ido-mode display vertically." tar])
 (iedit . [(20220216 717) nil "Edit multiple regions in the same way simultaneously." tar])
 (impatient-mode . [(1 1) ((cl-lib (0 3)) (simple-httpd (1 4 0)) (htmlize (1 40))) "Serve buffers live over HTTP." tar])
 (indent-guide . [(20160630) nil "Show vertical lines to guide indentation." tar])
 (inflections . [(2 6) ((cl-lib (0 5)) (emacs (24))) "Convert english words between singular and plural." tar])
 (isend-mode . [(20210106 1506) nil "Interactively send parts of an Emacs buffer to an interpreter." tar])
 (js2-mode . [(20231224) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (js2-refactor . [(0 9 0) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs." tar])
 (list-utils . [(0 4 7) nil "List-manipulation utility functions." tar])
 (logito . [(0 2 0) ((emacs (25 1))) "Logging library for Emacs." tar])
 (lsp-mode . [(9 0 0) ((emacs (27 1)) (dash (2 18 0)) (f (0 20 0)) (ht (2 3)) (spinner (1 7 3)) (markdown-mode (2 3)) (lv (0)) (eldoc (1 11))) "LSP mode." tar])
 (lsp-ui . [(9 0 0) ((emacs (27 1)) (dash (2 18 0)) (lsp-mode (6 0)) (markdown-mode (2 3))) "UI modules for lsp-mode." tar])
 (lv . [(0 15 0) nil "Other echo area" tar])
 (magit . [(4 1 2) ((emacs (26 1)) (compat (30 0 0 0)) (dash (2 19 1)) (magit-section (4 1 2)) (seq (2 24)) (transient (0 7 8)) (with-editor (3 4 2))) "A Git porcelain inside Emacs." tar])
 (magit-section . [(4 1 2) ((emacs (26 1)) (compat (30 0 0 0)) (dash (2 19 1)) (seq (2 24))) "Sections for read-only buffers." tar])
 (makey . [(0 3) ((cl-lib (0 2))) "Interactive commandline mode." tar])
 (markdown-mode . [(2 6) ((emacs (27 1))) "Major mode for Markdown-formatted text." tar])
 (marshal . [(0 9 1) ((emacs (25 1)) (ht (2 0))) "Eieio extension for automatic (un)marshalling." tar])
 (memoize . [(1 1) nil "Memoization functions." tar])
 (multiple-cursors . [(1 4 0) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar])
 (org . [(9 1 9) ((emacs (24 3))) "Outline-based notes management and organizer" tar])
 (org-download . [(0 1 0) ((async (1 2))) "Image dragmode." tar])
 (page-break-lines . [(0 15) ((emacs (24 4))) "Display ^L page breaks as tidy horizontal lines." tar])
 (paredit . [(26) nil "Minor mode for editing parentheses." tar])
 (parseclj . [(1 1 1) ((emacs (25))) "Clojure/EDN parser." tar])
 (parseedn . [(1 2 1) ((emacs (26)) (parseclj (1 1 1)) (map (2))) "Clojure/EDN parser." tar])
 (pcache . [(0 5 1) ((emacs (25 1))) "Persistent caching for Emacs." tar])
 (pkg-info . [(0 6) ((epl (0 8))) "Information about packages." tar])
 (popup . [(0 5 9) ((emacs (24 3))) "Visual Popup User Interface." tar])
 (pos-tip . [(0 4 7) nil "Show tooltip at point." tar])
 (projectile . [(2 8 0) ((emacs (25 1))) "Manage and navigate projects in Emacs easily." tar])
 (puppet-mode . [(0 4) ((emacs (24 1)) (pkg-info (0 4))) "Major mode for Puppet manifests." tar])
 (pyvenv . [(1 21) nil "Python virtual environment interface." tar])
 (queue . [(0 2) nil "Queue data structure" tar])
 (s . [(1 13 0) nil "The long lost Emacs string manipulation library." tar])
 (seq . [(2 24) nil "Sequence manipulation functions" tar])
 (sesman . [(0 3 4) ((emacs (25))) "Generic Session Manager." tar])
 (simple-httpd . [(1 5 1) ((cl-lib (0 3))) "Pure elisp HTTP server." tar])
 (skewer-mode . [(1 8 0) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "Live browser JavaScript, CSS, and HTML interaction." tar])
 (smart-tabs-mode . [(1 1) nil "Intelligently indent with tabs, align with spaces!." tar])
 (smartparens . [(1 11 0) ((dash (2 13 0)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar])
 (smex . [(3 0) nil "Mstyle fuzzy matching." tar])
 (spinner . [(1 7 4) ((emacs (24 3))) "Add spinners and progressline for ongoing operations" tar])
 (sync-recentf . [(20160326 2001) nil "Synchronize the recent files list between Emacs instances." tar])
 (transient . [(0 7 9) ((emacs (26 1)) (compat (30 0 0 0)) (seq (2 24))) "Transient commands" tar])
 (undo-tree . [(0 8 2) ((queue (0 2))) "Treat undo history as a tree" tar])
 (use-package . [(2 4 6) ((emacs (24 3)) (bind-key (2 4))) "A configuration macro for simplifying your .emacs" tar])
 (vimrc-mode . [(20181116 1919) nil "Major mode for vimrc files." tar])
 (web-mode . [(17 3 13) ((emacs (23 1))) "Major mode for editing web templates." tar])
 (wfnames . [(1 2) ((emacs (24 4))) "Edit filenames." tar])
 (wgrep . [(3 0 0) ((emacs (25 1))) "Writable grep buffer." tar])
 (wgrep-ag . [(3 0 0) ((emacs (25 1)) (wgrep (3 0 0))) "Writable ag buffer." tar])
 (which-key . [(3 6 1) ((emacs (25 1))) "Display available keybindings in popup" tar])
 (with-editor . [(3 4 2) ((emacs (26 1)) (compat (30 0 0 0))) "Use the Emacsclient as $EDITOR." tar])
 (ws-butler . [(0 7) nil "Unobtrusively remove trailing whitespace." tar])
 (xml-rpc . [(1 6 15) nil "An elisp implementation of clientside XML-RPC." tar])
 (yaml-mode . [(0 0 16) ((emacs (24 1))) "Major mode for editing YAML files." tar])
 (yasnippet . [(0 14 1) ((cl-lib (0 5)) (emacs (24 4))) "Yet another snippet extension for Emacs" tar])
 (ztree . [(1 0 6) ((cl-lib (0))) "Text mode directory tree" tar])
)
